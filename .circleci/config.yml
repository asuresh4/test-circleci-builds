# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/asuresh4/test-circleci-builds
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -v ./...
      - run:
          name: Run on fail status
          command: |
              curl --request POST \
              --url https://api.github.com/repos/asuresh4/test-circleci-builds/issues \
              --header "authorization: Bearer ${GITHUB_TOKEN}" \
              --header "content-type: application/json" \
              --data '{
                "title": "Tests failed in branch '"${CIRCLE_BRANCH}"' for commit '"${CIRCLE_SHA1}"'",
                "body": "Link to failed job: '"${CIRCLE_BUILD_URL}"'.",
                "labels": ["P2"],
                 "assignees": ["asuresh4"]
                }'
          when: on_fail
